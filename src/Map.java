import java.util.ArrayList;
import java.util.Arrays;

/**
 * Created by BChilds on 1/27/17.
 */
public class Map {
    /*
    This class:
    - generates a map to output
    - Processes moves and actions
    - checks Mine states and ship position
    - generates new map to output
    - iterates to next move/action

    Takes in a list of commands and a list of Mines, uses this to generate map size and ship coordinates
        A movement is actually a change in map size, as ship is always center of the map
    */

    //Map HAS A list of mines generated by Inputs

    ArrayList<Mine> mineArrayList = new ArrayList<>();
    ArrayList<String> commandArrayList = new ArrayList<>();
    int[] mapDimension = new int[2];

    public Map(Inputs input){
       getMines(input);
    }

    enum commands {
       North, South, East, West, Alpha, Beta, Delta, Increment //Commands must always be one of these
    }

    //get initial list of mines from Input and save to mineArrayList
    public void getMines(Inputs input){
        mineArrayList = input.generateMineList(input.fields1);
    }
    //get starting command list generated by Input
    public void getCommands(Inputs input){
        //get commands from Input
    }

    //build map and output
    public void printMap(){
        mapDimension = getMapDimensions();
        centerShip(mapDimension);
        //create character array for map
        char[][] newMap = new char[mapDimension[0]][mapDimension[1]];
        for(int i = 0; i < newMap.length; i++){
            Arrays.fill(newMap[i],'.');
        }
        //get all the mine characters and print to map
        for(Mine mine:mineArrayList){
            //remember, mine[1] is its Y coord, which is which char[] it should be in
            //mine[0] is its X coord, which is what place in the char[] it is in
            newMap[mine.getCoords()[1]][mine.getCoords()[0]] =  mine.getChar();
        }

        //temporary - print map to console
        for(char[] lineX: newMap){
            for(char c: lineX){
                System.out.print(c);
            }
            System.out.print("\n");
        }
    }

    private void centerShip(int[] dims){
        //center ship. coords always odd
        Ship.setCoords(new int[] {dims[0]/2, dims[1]/2});
    }

    private int[] getMapDimensions(){
        //gets dimensions for the map based on the mines
        //{xmin, xmax, ymin, ymax}
        int[] dims = {0,0,0,0};
        int[] out = new int[2];

        //iterate through mines, get max/min X and max/min Y
        for(Mine mine: mineArrayList){
            int[] tempCoords = mine.getCoords();

            //check X min/max
            if(tempCoords[0] < dims[0]){
                dims[0] = tempCoords[0];
            } else if(tempCoords[0] > dims[1]){
                dims[1] = tempCoords[0];
            }
            //check Y min/max
            if(tempCoords[1] < dims[2]){
                dims[2] = tempCoords[1];
            } else if(tempCoords[0] > dims[3]){
                dims[3] = tempCoords[1];
            }
        }

        //if the difference between max/mins is even, add one
        if((dims[1]-dims[0])%2 == 0){
            dims[1]+=1;
        }
        if((dims[3]-dims[2])%2 == 0){
            dims[3]+=1;
        }

        out[0] = dims[1]-dims[0];
        out[1] = dims[3]-dims[2];
        return out; //return an {x,y}
    }

    //Check mines for passed

    //Do commands

    //Decrement Z's of mines



}
